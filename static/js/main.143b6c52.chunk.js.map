{"version":3,"sources":["components/layout/Header.js","context.js","components/events/Event.js","components/events/Events.js","components/layout/TextInputGroup.js","components/events/Addevent.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","title","className","style","color","fontSize","textAlign","alignContent","href","to","defaultProps","Context","React","createContext","Provider","state","events","dispatch","action","setState","type","filter","event","id","payload","reducer","axios","get","res","this","data","value","children","Component","Consumer","Event","showEventInfo","onShowClick","e","onDeleteClick","a","delete","name","website","onClick","bind","float","Events","Fragment","map","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","Addevent","errors","onSubmit","preventDefault","city","newEvent","post","history","push","target","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.143b6c52.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { title } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-success mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a\r\n          style={{\r\n            color: \"Yellow\",\r\n            fontSize: \"35px\",\r\n            textAlign: \"center\",\r\n            alignContent: \"center\",\r\n          }}\r\n          href=\"/#\"\r\n          className=\"navbar-brand\"\r\n        >\r\n          {title}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"navbar-item\">\r\n              <Link\r\n                to=\"/\"\r\n                className=\"nav-link\"\r\n                style={{ color: \"aqua\", fontSize: \"25px\" }}\r\n                href=\"/#\"\r\n              >\r\n                <i className=\"fas fa-eye\"></i> View\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link\r\n                to=\"/event/add\"\r\n                className=\"nav-link\"\r\n                style={{ color: \"aqua\", fontSize: \"25px\" }}\r\n                href=\"/#\"\r\n              >\r\n                <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link\r\n                to=\"/about\"\r\n                className=\"nav-link\"\r\n                style={{ color: \"aqua\", fontSize: \"25px\" }}\r\n                href=\"/#\"\r\n              >\r\n                <i className=\"fas fa-question\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  title: \"FindMyEvents\",\r\n};\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((event) => event.id !== action.payload),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        events: [action.payload, ...state.events],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      events: [],\r\n      dispatch: (action) => {\r\n        this.setState((state) => reducer(state, action));\r\n      },\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ events: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showEventInfo: false,\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({\r\n      showEventInfo: !this.state.showEventInfo,\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, website } = this.props.event;\r\n    const { showEventInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h3>\r\n                Event name : {name}\r\n                <i onClick={this.onShowClick} className=\"fas fa-angle-down\" />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  style={{ float: \"right\", fontSize: \"15px\" }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </h3>\r\n              {showEventInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Website : {website}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nEvent.propTypes = {\r\n  event: PropTypes.object.isRequired,\r\n};\r\nexport default Event;\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\nimport { Consumer } from \"../../context\";\r\nclass Events extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { events } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span style={{ color: \"blue\" }}>Events</span> List\r\n              </h1>\r\n              {events.map((event) => (\r\n                <Event key={event.id} event={event} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Events;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass Addevent extends Component {\r\n  state = {\r\n    name: \"\",\r\n    website: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, website } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (website === \"\") {\r\n      this.setState({ errors: { city: \"City is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const newEvent = {\r\n      name,\r\n      website,\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newEvent\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      website: \"\",\r\n\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  render() {\r\n    const { name, website, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">AddEvent</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Website\"\r\n                    name=\"website\"\r\n                    placeholder=\"Enter Website\"\r\n                    value={website}\r\n                    onChange={this.onChange}\r\n                    error={errors.website}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Event\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Addevent;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Events List</h1>\r\n      <p className=\"lead\">Simple app to know your Events</p>\r\n      <p className=\"lead-secondary\">Happy day!</p>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Please find a correct URL</h1>\r\n      <p>Sorry this page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Events from \"./components/events/Events\";\nimport { Provider } from \"./context\";\nimport Addevent from \"./components/events/Addevent\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header title=\"Find My Events\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Events} />\n                <Route exact path=\"/event/add\" component={Addevent} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}